# Название workflow
name: CI/CD Pipeline

# Триггеры для запуска workflow
on:
  workflow_dispatch:  # Workflow будет запускаться только вручную

# Определение jobs (задач)
jobs:
  # Job для сборки и деплоя
  build-and-deploy:
    runs-on: ubuntu-latest  # Запуск на последней версии Ubuntu

    steps:
    # Шаг 1: Клонирование репозитория
    - uses: actions/checkout@v4  # Используем action для клонирования репозитория

    # Шаг 2: Настройка Docker Buildx (для сборки многоплатформенных образов)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Используем action для настройки Buildx

    # Шаг 3: Авторизация в Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3  # Используем action для авторизации в Docker Hub
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Логин Docker Hub из секретов
        password: ${{ secrets.DOCKER_HUB_TOKEN }}  # Токен Docker Hub из секретов

    # Шаг 4: Создаем .env файл из секрета
    - name: Create .env-docker file from secret
      env:
        ENV_FILE: ${{ secrets.ENV_FILE }}  # Секрет с содержимым .env файла
      run: |
        echo "$ENV_FILE" > .env-docker  # Если файл не кодировался
        # Или, если файл был закодирован в Base64:
        # echo "$ENV_FILE" | base64 --decode > .env-docker

    # Шаг 5: Сборка и загрузка Docker-образов с использованием docker-compose
    - name: Build and push Docker images
      run: |
        docker compose -f docker-compose.yml build  # Собираем образы
        docker compose -f docker-compose.yml push  # Загружаем образы в Docker Hub

    # Шаг 6: Деплой на удаленный сервер с использованием docker-compose
    - name: Check for docker-compose.yml
      run: ls -la

    - name: Deploy to remote server
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}  # Хост удаленного сервера из секретов
        REMOTE_USER: ${{ secrets.REMOTE_USER }}  # Пользователь для подключения к серверу из секретов
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}  # Пароль для SSH из секретов
      run: |
        # Устанавливаем sshpass для автоматизации ввода пароля
        sudo apt-get update && sudo apt-get install -y sshpass
        
        # Копируем docker-compose.yml на удаленный сервер
        sshpass -p "$REMOTE_PASSWORD" scp -o StrictHostKeyChecking=no docker-compose.yml $REMOTE_USER@$REMOTE_HOST:~/docker-compose.yml
        
        # Копируем .env-docker на удаленный сервер
        sshpass -p "$REMOTE_PASSWORD" scp -o StrictHostKeyChecking=no .env-docker $REMOTE_USER@$REMOTE_HOST:~/.env-docker

        # Подключаемся к удаленному серверу и выполняем команды
        sshpass -p "$REMOTE_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
          # Проверяем наличие docker-compose.yml
          if [ ! -f docker-compose.yml ]; then
            echo 'docker-compose.yml not found!'
            exit 1
          fi
          docker-compose -f docker-compose.yml down
          docker compose -f docker-compose.yml pull  # Скачиваем последние образы из Docker Hub
          docker compose -f docker-compose.yml up -d  # Запускаем контейнеры
        "
